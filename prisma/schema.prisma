// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("SECRET_DATABASE_URL")
  relationMode = "prisma"
}

model Race {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  contry    String      @db.VarChar(50)
  category  String      @db.VarChar(50)
  date      DateTime
  Broadcast Broadcast[]
}

model BroadcastType {
  id        Int         @id @default(autoincrement())
  code      String      @db.VarChar(5)
  label     String      @db.VarChar(50)
  Broadcast Broadcast[]
}

model Broadcast {
  id          Int    @id @default(autoincrement())
  race        Race   @relation(fields: [raceId], references: [id])
  raceId      Int
  name        String @db.VarChar(50)
  link        String @db.VarChar(500)
  country_code String @db.VarChar(10)

  broadcastTypeId Int
  broadcastType   BroadcastType @relation(fields: [broadcastTypeId], references: [id])
  publishTime     DateTime      @default(now())
  Vote            Vote[]

  @@index([raceId])
  @@index([broadcastTypeId])
}

model User {
  id String @id @unique

  username    String @db.VarChar(50)
  mail        String @db.VarChar(50)
  score       Int    @default(1)
  country_code String? @db.VarChar(10) 

  auth_session Session[]
  key          Key[]
  Vote         Vote[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Vote {
  UserId      String  @map("user_id")
  BroadcastId Int     @map("broadcast_id")
  possitive   Boolean @default(false)

  User      User      @relation(fields: [UserId], references: [id])
  Broadcast Broadcast @relation(fields: [BroadcastId], references: [id])

  @@id([UserId, BroadcastId])
  @@index([UserId, BroadcastId])
  @@index([UserId])
  @@index([BroadcastId])
}
